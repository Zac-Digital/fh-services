{"version":3,"sources":["tmp/js/components/cookie-functions.js","tmp/js/components/helpers.js","tmp/js/components/postcode.js","tmp/js/components/analytics.js","tmp/js/components/clarity.js","tmp/js/components/cookie-banner.js","tmp/js/components/cookies-page.js","tmp/js/components/add-another.js","tmp/js/components/autocomplete.js","tmp/js/components/back-links.js","tmp/js/components/visibility-toggle.js","tmp/js/components/open-close-button.js","tmp/js/familyhubs.js"],"names":["COOKIE_CATEGORIES","analytics","window","GA_CONTAINER_ID","essential","GA_COOKIE_NAME","DEFAULT_COOKIE_CONSENT","version","GDS_CONSENT_COOKIE_VERSION","getConsentCookie","consentCookie","getCookie","consentCookieObj","JSON","parse","decodeURIComponent","err","isValidConsentCookie","options","setConsentCookie","cookieConsent","option","stringify","setCookie","encodeURIComponent","days","resetCookies","cookieType","forEach","cookie","deleteCookie","userAllowsCookieCategory","cookieCategory","cookiePreferences","e","console","error","userAllowsCookie","cookieName","category","indexOf","name","nameEQ","cookies","document","split","i","len","length","charAt","substring","value","cookieString","date","Date","setTime","getTime","toUTCString","location","protocol","hostname","nodeListForEach","nodes","callback","NodeList","prototype","call","INCODE_REGEX","POSTCODE_REGEX","SPACE_REGEX","sanitize","s","replace","toUpperCase","isValid","postcode","match","toOutcode","gtag","command","args","dataLayer","push","arguments","GaMeasurementId","initAnalytics","gaMeasurementId","userConsent","Boolean","setDefaultConsent","loadGaScript","pageViewParams","getPiiSafePageView","send_page_view","page_path","page_location","page_referrer","referrer","cookie_flags","updateAnalyticsStorageConsent","sendPageViewEvent","sendFilterPageCustomEvent","analytics_storage","granted","delayMs","element","getElementById","totalResults","getAttribute","undefined","total_results","sendAnalyticsCustomEvent","accepted","source","f","getElementsByTagName","j","createElement","async","src","parentNode","insertBefore","pageView","page_title","title","send_to","piiSafeReferrerQueryString","getPiiSafeQueryString","URL","search","urlArray","piiSafeQueryString","href","pathname","queryString","queryParams","URLSearchParams","get","set","delete","toString","clarityEnabled","initClarity","clarityId","clarity","q","previousConsent","sessionStorage","getItem","updateConsent","loadClarityScript","consent","cookieBannerAcceptSelector","cookieBannerRejectSelector","cookieBannerHideButtonSelector","cookieMessageSelector","cookieConfirmationAcceptSelector","cookieConfirmationRejectSelector","CookieBanner","$module","this","CookiesPage","initializeAddAnother","querySelectorAll","$addAnother","FamilyHubsFrontend","AddAnother","initializeAutocompletes","autocomplete","accessibleAutocomplete","enhanceSelectElement","selectElement","initializeBackButtons","history","link","classList","add","initializeVisibilityToggles","toggle","addEventListener","event","toToggleId","toToggle","style","display","init","$cookieBanner","$acceptButton","querySelector","$rejectButton","$cookieMessage","$cookieConfirmationAccept","$cookieConfirmationReject","$cookieBannerHideButtons","onCookiesPage","currentConsentCookie","CookieFunctions.getConsentCookie","CookieFunctions.isValidConsentCookie","CookieFunctions.resetCookies","removeAttribute","acceptCookies","bind","rejectCookies","$cookieBannerHideButton","hideBanner","setAttribute","CookieFunctions.setConsentCookie","updateClarityConsent","revealConfirmationMessage","confirmationMessage","focus","$cookiePage","$cookieForm","$cookieFormFieldsets","$successNotification","$successLink","$cookieFormFieldset","showUserPreference","savePreferences","preventDefault","preferences","getCookieType","selectedItem","analyticsAccepted","showSuccessNotification","preference","radioValue","checked","scrollTo","id","container","$","index","data","functionName","on","proxy","find","prop","onAddButtonClick","item","getNewItem","firstItem","getItems","first","hasRemoveButton","createRemoveButton","last","after","stripErrorFromNewItem","el","remove","removeChild","cloneNode","wrapper","$item","updateAttributes","resetItem","each","originalId","attr","siblings","parents","htmlFor","append","type","onRemoveButtonClick","currentTarget","items","focusHeading","OpenCloseButton","constructor","openCloseButton","targetId","target","showText","textContent","hideText","hideTarget","showTarget","handleClick","contains","initAll","GA_MEASUREMENT_ID","CLARITY_ID","openCloseButtons","GOVUKFrontend","MOJFrontend"],"mappings":"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","file":"familyhubs-frontend-9.5.1.min.js","sourcesContent":["/* Users can (dis)allow different groups of cookies. */\nconst COOKIE_CATEGORIES = {\n    analytics: ['_ga', '_ga_' + window.GA_CONTAINER_ID],\n    /* Essential cookies\n     *\n     * Essential cookies cannot be deselected, but we want our cookie code to\n     * only allow adding cookies that are documented in this object, so they need\n     * to be added here.\n     */\n    essential: [window.GA_COOKIE_NAME]\n};\n/*\n * Default cookie preferences if user has no cookie preferences.\n *\n * Note that this doesn't include a key for essential cookies, essential\n * cookies cannot be disallowed. If the object contains { essential: false }\n * this will be ignored.\n */\nconst DEFAULT_COOKIE_CONSENT = {\n    analytics: false,\n    version: window.GDS_CONSENT_COOKIE_VERSION\n};\n/** Return the user's cookie preferences.\n *\n * If the consent cookie is malformed, or not present,\n * returns null.\n */\nexport function getConsentCookie() {\n    const consentCookie = getCookie(window.GA_COOKIE_NAME);\n    let consentCookieObj;\n    if (consentCookie) {\n        try {\n            consentCookieObj = JSON.parse(decodeURIComponent(consentCookie));\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    else {\n        return null;\n    }\n    return consentCookieObj;\n}\n/** Check the cookie preferences object.\n *\n * If the consent object is not present, malformed, or incorrect version,\n * returns false, otherwise returns true.\n */\nexport function isValidConsentCookie(options) {\n    return (options && options.version >= window.GDS_CONSENT_COOKIE_VERSION);\n}\n/** Update the user's cookie preferences. */\nexport function setConsentCookie(options) {\n    let cookieConsent = getConsentCookie();\n    if (!cookieConsent) {\n        cookieConsent = JSON.parse(JSON.stringify(DEFAULT_COOKIE_CONSENT));\n    }\n    // Merge current cookie preferences and new preferences\n    for (var option in options) {\n        cookieConsent[option] = options[option];\n    }\n    cookieConsent.version = window.GDS_CONSENT_COOKIE_VERSION;\n    // Set the consent cookie\n    setCookie(window.GA_COOKIE_NAME, encodeURIComponent(JSON.stringify(cookieConsent)), { days: 365 });\n    // Update the other cookies\n    resetCookies();\n}\n/** Apply the user's cookie preferences\n *\n * Deletes any cookies the user has not consented to.\n */\nexport function resetCookies() {\n    var options = getConsentCookie();\n    // If no preferences or old version use the default\n    if (!isValidConsentCookie(options)) {\n        options = JSON.parse(JSON.stringify(DEFAULT_COOKIE_CONSENT));\n    }\n    for (var cookieType in options) {\n        if (cookieType === 'version') {\n            continue;\n        }\n        // Essential cookies cannot be deselected, ignore this cookie type\n        if (cookieType === 'essential') {\n            continue;\n        }\n        if (!options[cookieType]) {\n            // Fetch the cookies in that category\n            var cookiesInCategory = COOKIE_CATEGORIES[cookieType];\n            cookiesInCategory.forEach(function (cookie) {\n                deleteCookie(cookie);\n            });\n        }\n    }\n}\nfunction userAllowsCookieCategory(cookieCategory, cookiePreferences) {\n    // Essential cookies are always allowed\n    if (cookieCategory === 'essential') {\n        return true;\n    }\n    // Sometimes cookiePreferences is malformed in some of the tests, so we need to handle these\n    try {\n        return cookiePreferences[cookieCategory];\n    }\n    catch (e) {\n        console.error(e);\n        return false;\n    }\n}\nfunction userAllowsCookie(cookieName) {\n    // Always allow setting the consent cookie\n    if (cookieName === window.GA_COOKIE_NAME) {\n        return true;\n    }\n    // Get the current cookie preferences\n    var cookiePreferences = getConsentCookie();\n    // If no preferences or old version use the default\n    if (!isValidConsentCookie(cookiePreferences)) {\n        cookiePreferences = DEFAULT_COOKIE_CONSENT;\n    }\n    for (var category in COOKIE_CATEGORIES) {\n        var cookiesInCategory = COOKIE_CATEGORIES[category];\n        if (cookiesInCategory.indexOf(cookieName) !== '-1') {\n            return userAllowsCookieCategory(category, cookiePreferences);\n        }\n    }\n    // Deny the cookie if it is not known to us\n    return false;\n}\nfunction getCookie(name) {\n    var nameEQ = name + '=';\n    var cookies = document.cookie.split(';');\n    for (var i = 0, len = cookies.length; i < len; i++) {\n        var cookie = cookies[i];\n        while (cookie.charAt(0) === ' ') {\n            cookie = cookie.substring(1, cookie.length);\n        }\n        if (cookie.indexOf(nameEQ) === 0) {\n            return decodeURIComponent(cookie.substring(nameEQ.length));\n        }\n    }\n    return null;\n}\n// do we need to set the domain?\nfunction setCookie(name, value, options) {\n    if (userAllowsCookie(name)) {\n        if (typeof options === 'undefined') {\n            options = {};\n        }\n        var cookieString = name + '=' + value + '; path=/; SameSite=Strict';\n        if (options.days) {\n            var date = new Date();\n            date.setTime(date.getTime() + (options.days * 24 * 60 * 60 * 1000));\n            cookieString = cookieString + '; expires=' + date.toUTCString();\n        }\n        if (document.location.protocol === 'https:') {\n            cookieString = cookieString + '; Secure';\n        }\n        document.cookie = cookieString;\n    }\n}\nfunction deleteCookie(name) {\n    if (getCookie(name)) {\n        // Cookies need to be deleted in the same level of specificity in which they were set\n        // If a cookie was set with a specified domain, it needs to be specified when deleted\n        // If a cookie wasn't set with the domain attribute, it shouldn't be there when deleted\n        // You can't tell if a cookie was set with a domain attribute or not, so try both options\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/';\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=' + window.location.hostname + ';path=/';\n        document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=.' + window.location.hostname + ';path=/';\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","/*todo: remove this and use NodeList.prototype.forEach instead, as govuk has for v5 */\n/* https://github.com/alphagov/govuk-frontend/issues/3466 */\n/* https://github.com/alphagov/govuk-frontend/pull/3570/files */\nexport function nodeListForEach(nodes, callback) {\n    if (window.NodeList.prototype.forEach) {\n        return nodes.forEach(callback);\n    }\n    for (var i = 0; i < nodes.length; i++) {\n        callback.call(window, nodes[i], i, nodes);\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvaGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzRkFBc0Y7QUFDdEYsNERBQTREO0FBQzVELGdFQUFnRTtBQUVoRSxNQUFNLFVBQVUsZUFBZSxDQUMzQixLQUEwQixFQUMxQixRQUE0RTtJQUU1RSxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3BDLE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBQ0QsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUNwQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzlDLENBQUM7QUFDTCxDQUFDIiwiZmlsZSI6ImNvbXBvbmVudHMvaGVscGVycy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qdG9kbzogcmVtb3ZlIHRoaXMgYW5kIHVzZSBOb2RlTGlzdC5wcm90b3R5cGUuZm9yRWFjaCBpbnN0ZWFkLCBhcyBnb3Z1ayBoYXMgZm9yIHY1ICovXG4vKiBodHRwczovL2dpdGh1Yi5jb20vYWxwaGFnb3YvZ292dWstZnJvbnRlbmQvaXNzdWVzLzM0NjYgKi9cbi8qIGh0dHBzOi8vZ2l0aHViLmNvbS9hbHBoYWdvdi9nb3Z1ay1mcm9udGVuZC9wdWxsLzM1NzAvZmlsZXMgKi9cblxuZXhwb3J0IGZ1bmN0aW9uIG5vZGVMaXN0Rm9yRWFjaChcbiAgICBub2RlczogTm9kZUxpc3RPZjxFbGVtZW50PixcbiAgICBjYWxsYmFjazogKG5vZGU6IEVsZW1lbnQsIGluZGV4OiBudW1iZXIsIG5vZGVzOiBOb2RlTGlzdE9mPEVsZW1lbnQ+KSA9PiB2b2lkXG4pOiB2b2lkIHtcbiAgICBpZiAod2luZG93Lk5vZGVMaXN0LnByb3RvdHlwZS5mb3JFYWNoKSB7XG4gICAgICAgIHJldHVybiBub2Rlcy5mb3JFYWNoKGNhbGxiYWNrKTtcbiAgICB9XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBub2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjYWxsYmFjay5jYWxsKHdpbmRvdywgbm9kZXNbaV0sIGksIG5vZGVzKTtcbiAgICB9XG59XG4iXX0=\n","// from https://github.com/ideal-postcodes/postcode\n/**\n * @hidden\n */\nexport const DISTRICT_SPLIT_REGEX = /^([a-z]{1,2}\\d)([a-z])$/i;\n/**\n * Tests for the unit section of a postcode\n */\nexport const UNIT_REGEX = /[a-z]{2}$/i;\n/**\n * Tests for the inward code section of a postcode\n */\nexport const INCODE_REGEX = /\\d[a-z]{2}$/i;\n/**\n * Tests for the outward code section of a postcode\n */\nexport const OUTCODE_REGEX = /^[a-z]{1,2}\\d[a-z\\d]?$/i;\n/**\n * Tests for a valid postcode\n */\nexport const POSTCODE_REGEX = /^[a-z]{1,2}\\d[a-z\\d]?\\s*\\d[a-z]{2}$/i;\n/**\n * Test for a valid postcode embedded in text\n */\nexport const POSTCODE_CORPUS_REGEX = /[a-z]{1,2}\\d[a-z\\d]?\\s*\\d[a-z]{2}/gi;\n/**\n * Tests for the area section of a postcode\n */\nexport const AREA_REGEX = /^[a-z]{1,2}/i;\n/**\n * Invalid postcode prototype\n * @hidden\n */\nconst invalidPostcode = {\n    valid: false,\n    postcode: null,\n    incode: null,\n    outcode: null,\n    area: null,\n    district: null,\n    subDistrict: null,\n    sector: null,\n    unit: null,\n};\n/**\n * Return first elem of input is RegExpMatchArray or null if input null\n * @hidden\n */\nconst firstOrNull = (match) => {\n    if (match === null)\n        return null;\n    return match[0];\n};\nconst SPACE_REGEX = /\\s+/gi;\n/**\n * Drop all spaces and uppercase\n * @hidden\n */\nconst sanitize = (s) => s.replace(SPACE_REGEX, \"\").toUpperCase();\n/**\n * Sanitizes string and returns regex matches\n * @hidden\n */\nconst matchOn = (s, regex) => sanitize(s).match(regex);\n/**\n * Detects a \"valid\" postcode\n * - Starts and ends on a non-space character\n * - Any length of intervening space is allowed\n * - Must conform to one of following schemas:\n *  - AA1A 1AA\n *  - A1A 1AA\n *  - A1 1AA\n *  - A99 9AA\n *  - AA9 9AA\n *  - AA99 9AA\n */\nexport const isValid = (postcode) => postcode.match(POSTCODE_REGEX) !== null;\n/**\n * Returns true if string is a valid outcode\n */\nexport const validOutcode = (outcode) => outcode.match(OUTCODE_REGEX) !== null;\n/**\n * Returns a normalised postcode string (i.e. uppercased and properly spaced)\n *\n * Returns null if invalid postcode\n */\nexport const toNormalised = (postcode) => {\n    const outcode = toOutcode(postcode);\n    if (outcode === null)\n        return null;\n    const incode = toIncode(postcode);\n    if (incode === null)\n        return null;\n    return `${outcode} ${incode}`;\n};\n/**\n * Returns a correctly formatted outcode given a postcode\n *\n * Returns null if invalid postcode\n */\nexport const toOutcode = (postcode) => {\n    if (!isValid(postcode))\n        return null;\n    return sanitize(postcode).replace(INCODE_REGEX, \"\");\n};\n/**\n * Returns a correctly formatted incode given a postcode\n *\n * Returns null if invalid postcode\n */\nexport const toIncode = (postcode) => {\n    if (!isValid(postcode))\n        return null;\n    const match = matchOn(postcode, INCODE_REGEX);\n    return firstOrNull(match);\n};\n/**\n * Returns a correctly formatted area given a postcode\n *\n * Returns null if invalid postcode\n */\nexport const toArea = (postcode) => {\n    if (!isValid(postcode))\n        return null;\n    const match = matchOn(postcode, AREA_REGEX);\n    return firstOrNull(match);\n};\n/**\n * Returns a correctly formatted sector given a postcode\n *\n * Returns null if invalid postcode\n */\nexport const toSector = (postcode) => {\n    const outcode = toOutcode(postcode);\n    if (outcode === null)\n        return null;\n    const incode = toIncode(postcode);\n    if (incode === null)\n        return null;\n    return `${outcode} ${incode[0]}`;\n};\n/**\n * Returns a correctly formatted unit given a postcode\n *\n * Returns null if invalid postcode\n */\nexport const toUnit = (postcode) => {\n    if (!isValid(postcode))\n        return null;\n    const match = matchOn(postcode, UNIT_REGEX);\n    return firstOrNull(match);\n};\n/**\n * Returns a correctly formatted district given a postcode\n *\n * Returns null if invalid postcode\n *\n * @example\n *\n * ```\n * toDistrict(\"AA9 9AA\") // => \"AA9\"\n * toDistrict(\"A9A 9AA\") // => \"A9\"\n * ```\n */\nexport const toDistrict = (postcode) => {\n    const outcode = toOutcode(postcode);\n    if (outcode === null)\n        return null;\n    const match = outcode.match(DISTRICT_SPLIT_REGEX);\n    if (match === null)\n        return outcode;\n    return match[1];\n};\n/**\n * Returns a correctly formatted subdistrict given a postcode\n *\n * Returns null if no subdistrict is available on valid postcode\n * Returns null if invalid postcode\n *\n * @example\n *\n * ```\n * toSubDistrict(\"AA9A 9AA\") // => \"AA9A\"\n * toSubDistrict(\"A9A 9AA\") // => \"A9A\"\n * toSubDistrict(\"AA9 9AA\") // => null\n * toSubDistrict(\"A9 9AA\") // => null\n * ```\n */\nexport const toSubDistrict = (postcode) => {\n    const outcode = toOutcode(postcode);\n    if (outcode === null)\n        return null;\n    const split = outcode.match(DISTRICT_SPLIT_REGEX);\n    if (split === null)\n        return null;\n    return outcode;\n};\n/**\n * Returns a ValidPostcode or InvalidPostcode object from a postcode string\n *\n * @example\n *\n * ```\n * import { parse } from \"postcode\";\n *\n * const {\n * postcode,    // => \"SW1A 2AA\"\n * outcode,     // => \"SW1A\"\n * incode,      // => \"2AA\"\n * area,        // => \"SW\"\n * district,    // => \"SW1\"\n * unit,        // => \"AA\"\n * sector,      // => \"SW1A 2\"\n * subDistrict, // => \"SW1A\"\n * valid,       // => true\n * } = parse(\"Sw1A     2aa\");\n *\n * const {\n * postcode,    // => null\n * outcode,     // => null\n * incode,      // => null\n * area,        // => null\n * district,    // => null\n * unit,        // => null\n * sector,      // => null\n * subDistrict, // => null\n * valid,       // => false\n * } = parse(\"    Oh no, ):   \");\n * ```\n */\nexport const parse = (postcode) => {\n    if (!isValid(postcode))\n        return Object.assign({}, invalidPostcode);\n    return {\n        valid: true,\n        postcode: toNormalised(postcode),\n        incode: toIncode(postcode),\n        outcode: toOutcode(postcode),\n        area: toArea(postcode),\n        district: toDistrict(postcode),\n        subDistrict: toSubDistrict(postcode),\n        sector: toSector(postcode),\n        unit: toUnit(postcode),\n    };\n};\n/**\n * Searches a body of text for postcode matches\n *\n * Returns an empty array if no match\n *\n * @example\n *\n * ```\n * // Retrieve valid postcodes in a body of text\n * const matches = match(\"The PM and her no.2 live at SW1A2aa and SW1A 2AB\"); // => [\"SW1A2aa\", \"SW1A 2AB\"]\n *\n * // Perform transformations like normalisation postcodes using `.map` and `toNormalised`\n * matches.map(toNormalised); // => [\"SW1A 2AA\", \"SW1A 2AB\"]\n *\n * // No matches yields empty array\n * match(\"Some London outward codes are SW1A, NW1 and E1\"); // => []\n * ```\n */\nexport const match = (corpus) => corpus.match(POSTCODE_CORPUS_REGEX) || [];\n/**\n * Replaces postcodes in a body of text with a string\n *\n * By default the replacement string is empty string `\"\"`\n *\n * @example\n *\n * ```\n * // Replace postcodes in a body of text\n * replace(\"The PM and her no.2 live at SW1A2AA and SW1A 2AB\");\n * // => { match: [\"SW1A2AA\", \"SW1A 2AB\"], result: \"The PM and her no.2 live at  and \" }\n *\n * // Add custom replacement\n * replace(\"The PM lives at SW1A 2AA\", \"Downing Street\");\n * // => { match: [\"SW1A 2AA\"], result: \"The PM lives at Downing Street\" };\n *\n * // No match\n * replace(\"Some London outward codes are SW1A, NW1 and E1\");\n * // => { match: [], result: \"Some London outward codes are SW1A, NW1 and E1\" }\n * ```\n */\nexport const replace = (corpus, replaceWith = \"\") => ({\n    match: match(corpus),\n    result: corpus.replace(POSTCODE_CORPUS_REGEX, replaceWith),\n});\nexport const FIXABLE_REGEX = /^\\s*[a-z01]{1,2}[0-9oi][a-z\\d]?\\s*[0-9oi][a-z01]{2}\\s*$/i;\n/**\n * Attempts to fix and clean a postcode. Specifically:\n * - Performs character conversion on obviously wrong and commonly mixed up letters (e.g. O => 0 and vice versa)\n * - Trims string\n * - Properly adds space between outward and inward codes\n *\n * If the postcode cannot be coerced into a valid format, the original string is returned\n *\n * @example\n * ```javascript\n * fix(\" SW1A  2AO\") => \"SW1A 2AO\" // Properly spaces\n * fix(\"SW1A 2A0\") => \"SW1A 2AO\" // 0 is coerced into \"0\"\n * ```\n *\n * Aims to be used in conjunction with parse to make postcode entry more forgiving:\n *\n * @example\n * ```javascript\n * const { inward } = parse(fix(\"SW1A 2A0\")); // inward = \"2AO\"\n * ```\n */\nexport const fix = (s) => {\n    const match = s.match(FIXABLE_REGEX);\n    if (match === null)\n        return s;\n    s = s.toUpperCase().trim().replace(/\\s+/gi, \"\");\n    const l = s.length;\n    const inward = s.slice(l - 3, l);\n    return `${coerceOutcode(s.slice(0, l - 3))} ${coerce(\"NLL\", inward)}`;\n};\nconst toLetter = {\n    \"0\": \"O\",\n    \"1\": \"I\",\n};\nconst toNumber = {\n    O: \"0\",\n    I: \"1\",\n};\nconst coerceOutcode = (i) => {\n    if (i.length === 2)\n        return coerce(\"LN\", i);\n    if (i.length === 3)\n        return coerce(\"L??\", i);\n    if (i.length === 4)\n        return coerce(\"LLN?\", i);\n    return i;\n};\n/**\n * Given a pattern of letters, numbers and unknowns represented as a sequence\n * of L, Ns and ? respectively; coerce them into the correct type given a\n * mapping of potentially confused letters\n *\n * @hidden\n *\n * @example coerce(\"LLN\", \"0O8\") => \"OO8\"\n */\nconst coerce = (pattern, input) => input\n    .split(\"\")\n    .reduce((acc, c, i) => {\n    const target = pattern.charAt(i);\n    if (target === \"N\")\n        acc.push(toNumber[c] || c);\n    if (target === \"L\")\n        acc.push(toLetter[c] || c);\n    if (target === \"?\")\n        acc.push(c);\n    return acc;\n}, [])\n    .join(\"\");\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","//todo: consent mode debugging/check: https://developers.google.com/tag-platform/devguides/consent-debugging\nimport { isValidConsentCookie } from './cookie-functions';\nimport { toOutcode } from './postcode';\nfunction gtag(command, ...args) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push(arguments);\n}\nlet GaMeasurementId = '';\n//todo: use prototype? (or class?)\n// (having an object (prototype/class) will ensure that GaMeasurementId will have already been set)\nexport default function initAnalytics(gaMeasurementId, userConsent) {\n    // if the environment doesn't have a measurement id, don't load analytics\n    if (!Boolean(gaMeasurementId)) {\n        return;\n    }\n    GaMeasurementId = gaMeasurementId;\n    setDefaultConsent();\n    loadGaScript(gaMeasurementId);\n    gtag('js', new Date());\n    const pageViewParams = getPiiSafePageView(gaMeasurementId);\n    // set the config for auto generated events other than page_view\n    gtag('config', gaMeasurementId, {\n        send_page_view: false, //disable auto page_view measurement\n        page_path: pageViewParams.page_path,\n        page_location: pageViewParams.page_location,\n        page_referrer: pageViewParams.referrer,\n        cookie_flags: 'secure'\n    });\n    if (userConsent && isValidConsentCookie(userConsent) && userConsent.analytics) {\n        updateAnalyticsStorageConsent(true);\n    }\n    sendPageViewEvent();\n    sendFilterPageCustomEvent();\n}\nfunction setDefaultConsent() {\n    gtag('consent', 'default', {\n        'analytics_storage': 'denied'\n    });\n    gtag('set', 'url_passthrough', true);\n}\nexport function updateAnalyticsStorageConsent(granted, delayMs) {\n    let options = {\n        'analytics_storage': granted ? 'granted' : 'denied'\n    };\n    if (typeof delayMs !== 'undefined') {\n        options['wait_for_update'] = delayMs;\n    }\n    gtag('consent', 'update', options);\n}\nexport function sendPageViewEvent() {\n    // send the page_view event manually (https://developers.google.com/analytics/devguides/collection/gtagjs/pages#default_behavior)\n    gtag('event', 'page_view', getPiiSafePageView(GaMeasurementId));\n}\nexport function sendFilterPageCustomEvent() {\n    //todo: make filter page only\n    const element = document.getElementById('results');\n    const totalResults = element === null || element === void 0 ? void 0 : element.getAttribute('data-total-results');\n    if (totalResults === undefined)\n        return;\n    gtag('event', 'filter_page', {\n        'total_results': totalResults\n    });\n}\nexport function sendAnalyticsCustomEvent(accepted, source) {\n    gtag('event', 'analytics', {\n        'accepted': accepted,\n        'source': source\n    });\n}\nfunction loadGaScript(gaMeasurementId) {\n    const f = document.getElementsByTagName('script')[0];\n    const j = document.createElement('script');\n    j.async = true;\n    j.src = 'https://www.googletagmanager.com/gtag/js?id=' + gaMeasurementId;\n    f.parentNode.insertBefore(j, f);\n}\nfunction getPiiSafePageView(gaMeasurementId) {\n    const pageView = {\n        page_title: document.title,\n        send_to: gaMeasurementId,\n        referrer: '',\n        page_location: '',\n        page_path: ''\n    };\n    //todo: set as referrer or page_referrer in pageView - does it matter? is it only picking it up from the config?\n    //todo: get piisafe referrer function\n    if (document.referrer !== '') {\n        const referrerUrl = new URL(document.referrer);\n        const piiSafeReferrerQueryString = getPiiSafeQueryString(referrerUrl.search);\n        if (piiSafeReferrerQueryString == null) {\n            pageView.referrer = document.referrer;\n        }\n        else {\n            const urlArray = document.referrer.split('?');\n            pageView.referrer = urlArray[0] + piiSafeReferrerQueryString;\n        }\n    }\n    const piiSafeQueryString = getPiiSafeQueryString(window.location.search);\n    if (piiSafeQueryString == null) {\n        pageView.page_location = window.location.href;\n        pageView.page_path = window.location.pathname + window.location.search;\n        return pageView;\n    }\n    const urlArray = window.location.href.split('?');\n    pageView.page_location = urlArray[0] + piiSafeQueryString;\n    pageView.page_path = window.location.pathname + piiSafeQueryString;\n    return pageView;\n}\nfunction getPiiSafeQueryString(queryString) {\n    //todo: for safety, convert to lowercase, so that if the user changes the case of the url, we still don't collect pii\n    const queryParams = new URLSearchParams(queryString);\n    let postcode = queryParams.get('postcode');\n    if (postcode == null) {\n        // null indicates original query params were already pii safe\n        return null;\n    }\n    postcode = toOutcode(postcode);\n    queryParams.set('postcode', postcode);\n    queryParams.delete('latitude');\n    queryParams.delete('longitude');\n    return '?' + queryParams.toString();\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import { isValidConsentCookie } from \"./cookie-functions\";\nlet clarityEnabled = false;\nexport default function initClarity(clarityId, userConsent) {\n    // if the environment doesn't have a measurement id, don't load analytics\n    clarityEnabled = Boolean(clarityId);\n    if (!clarityEnabled)\n        return;\n    window.clarity = window.clarity || function () {\n        (window.clarity.q = window.clarity.q || []).push(arguments);\n    };\n    let previousConsent = Boolean(window.sessionStorage.getItem('_cltk'));\n    if (userConsent && isValidConsentCookie(userConsent) && userConsent.analytics != previousConsent) {\n        updateConsent(userConsent.analytics);\n    }\n    loadClarityScript(clarityId);\n}\nexport function updateConsent(consent) {\n    if (!clarityEnabled)\n        return;\n    window.clarity('consent', consent);\n}\nfunction loadClarityScript(clarityId) {\n    const f = document.getElementsByTagName('script')[0];\n    const j = document.createElement('script');\n    j.async = true;\n    j.src = 'https://www.clarity.ms/tag/' + clarityId;\n    f.parentNode.insertBefore(j, f);\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvY2xhcml0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWdCLG9CQUFvQixFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFRdkUsSUFBSSxjQUFjLEdBQVksS0FBSyxDQUFDO0FBRXBDLE1BQU0sQ0FBQyxPQUFPLFVBQVUsV0FBVyxDQUFDLFNBQWlCLEVBQUUsV0FBMEI7SUFDN0UseUVBQXlFO0lBQ3pFLGNBQWMsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDcEMsSUFBSSxDQUFDLGNBQWM7UUFBRSxPQUFPO0lBRTVCLE1BQU0sQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLE9BQU8sSUFBSTtRQUMvQixDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQTtJQUMvRCxDQUFDLENBQUE7SUFFRCxJQUFJLGVBQWUsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUN0RSxJQUFJLFdBQVcsSUFBSSxvQkFBb0IsQ0FBQyxXQUFXLENBQUMsSUFBSSxXQUFXLENBQUMsU0FBUyxJQUFJLGVBQWUsRUFBRSxDQUFDO1FBQy9GLGFBQWEsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVELGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ2pDLENBQUM7QUFFRCxNQUFNLFVBQVUsYUFBYSxDQUFDLE9BQWdCO0lBQzFDLElBQUksQ0FBQyxjQUFjO1FBQUUsT0FBTztJQUM1QixNQUFNLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUN2QyxDQUFDO0FBRUQsU0FBUyxpQkFBaUIsQ0FBQyxTQUFTO0lBQ2hDLE1BQU0sQ0FBQyxHQUFHLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyRCxNQUFNLENBQUMsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzNDLENBQUMsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0lBQ2YsQ0FBQyxDQUFDLEdBQUcsR0FBRyw2QkFBNkIsR0FBRyxTQUFTLENBQUM7SUFDbEQsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ3BDLENBQUMiLCJmaWxlIjoiY29tcG9uZW50cy9jbGFyaXR5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb25zZW50Q29va2llLCBpc1ZhbGlkQ29uc2VudENvb2tpZX0gZnJvbSBcIi4vY29va2llLWZ1bmN0aW9uc1wiO1xuXG5kZWNsYXJlIGdsb2JhbCB7XG4gICAgaW50ZXJmYWNlIFdpbmRvdyB7XG4gICAgICAgIGNsYXJpdHk6IGFueTtcbiAgICB9XG59XG5cbmxldCBjbGFyaXR5RW5hYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbml0Q2xhcml0eShjbGFyaXR5SWQ6IHN0cmluZywgdXNlckNvbnNlbnQ6IENvbnNlbnRDb29raWUpIHtcbiAgICAvLyBpZiB0aGUgZW52aXJvbm1lbnQgZG9lc24ndCBoYXZlIGEgbWVhc3VyZW1lbnQgaWQsIGRvbid0IGxvYWQgYW5hbHl0aWNzXG4gICAgY2xhcml0eUVuYWJsZWQgPSBCb29sZWFuKGNsYXJpdHlJZCk7XG4gICAgaWYgKCFjbGFyaXR5RW5hYmxlZCkgcmV0dXJuO1xuXG4gICAgd2luZG93LmNsYXJpdHkgPSB3aW5kb3cuY2xhcml0eSB8fCBmdW5jdGlvbigpIHtcbiAgICAgICAgKHdpbmRvdy5jbGFyaXR5LnEgPSB3aW5kb3cuY2xhcml0eS5xIHx8IFtdKS5wdXNoKGFyZ3VtZW50cylcbiAgICB9XG4gICAgXG4gICAgbGV0IHByZXZpb3VzQ29uc2VudCA9IEJvb2xlYW4od2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ19jbHRrJykpO1xuICAgIGlmICh1c2VyQ29uc2VudCAmJiBpc1ZhbGlkQ29uc2VudENvb2tpZSh1c2VyQ29uc2VudCkgJiYgdXNlckNvbnNlbnQuYW5hbHl0aWNzICE9IHByZXZpb3VzQ29uc2VudCkge1xuICAgICAgICB1cGRhdGVDb25zZW50KHVzZXJDb25zZW50LmFuYWx5dGljcyk7XG4gICAgfVxuXG4gICAgbG9hZENsYXJpdHlTY3JpcHQoY2xhcml0eUlkKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUNvbnNlbnQoY29uc2VudDogYm9vbGVhbikge1xuICAgIGlmICghY2xhcml0eUVuYWJsZWQpIHJldHVybjtcbiAgICB3aW5kb3cuY2xhcml0eSgnY29uc2VudCcsIGNvbnNlbnQpO1xufVxuXG5mdW5jdGlvbiBsb2FkQ2xhcml0eVNjcmlwdChjbGFyaXR5SWQpIHtcbiAgICBjb25zdCBmID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdO1xuICAgIGNvbnN0IGogPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgICBqLmFzeW5jID0gdHJ1ZTtcbiAgICBqLnNyYyA9ICdodHRwczovL3d3dy5jbGFyaXR5Lm1zL3RhZy8nICsgY2xhcml0eUlkO1xuICAgIGYucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoaiwgZik7XG59XG4iXX0=\n","import * as CookieFunctions from './cookie-functions.js';\n/*todo: we don't meed a pollyfill for bind, as long as we server up the non js version of the site for ie8 (https://caniuse.com/?search=bind) */\n/*import 'govuk-frontend/govuk/vendor/polyfills/Function/prototype/bind'*/\n/*todo: i think we're ok for this too (see above about ie8), but we _might_ need it for >8 ie (use? https://www.npmjs.com/package/events-polyfill)*/\n/*import 'govuk-frontend/govuk/vendor/polyfills/Event'*/\nimport { nodeListForEach } from './helpers';\nimport { sendPageViewEvent, sendFilterPageCustomEvent, sendAnalyticsCustomEvent, updateAnalyticsStorageConsent } from './analytics';\nimport { updateConsent as updateClarityConsent } from './clarity';\nconst cookieBannerAcceptSelector = '.js-cookie-banner-accept';\nconst cookieBannerRejectSelector = '.js-cookie-banner-reject';\nconst cookieBannerHideButtonSelector = '.js-cookie-banner-hide';\nconst cookieMessageSelector = '.js-cookie-banner-message';\nconst cookieConfirmationAcceptSelector = '.js-cookie-banner-confirmation-accept';\nconst cookieConfirmationRejectSelector = '.js-cookie-banner-confirmation-reject';\nexport default function CookieBanner($module) {\n    this.$module = $module;\n}\nCookieBanner.prototype.init = function () {\n    this.$cookieBanner = this.$module;\n    this.$acceptButton = this.$module.querySelector(cookieBannerAcceptSelector);\n    this.$rejectButton = this.$module.querySelector(cookieBannerRejectSelector);\n    this.$cookieMessage = this.$module.querySelector(cookieMessageSelector);\n    this.$cookieConfirmationAccept = this.$module.querySelector(cookieConfirmationAcceptSelector);\n    this.$cookieConfirmationReject = this.$module.querySelector(cookieConfirmationRejectSelector);\n    this.$cookieBannerHideButtons = this.$module.querySelectorAll(cookieBannerHideButtonSelector);\n    // Exit if no cookie banner module\n    // or if we're on the cookies page to avoid circular journeys\n    if (!this.$cookieBanner || this.onCookiesPage()) {\n        return;\n    }\n    // Show the cookie banner to users who have not consented or have an\n    // outdated consent cookie\n    var currentConsentCookie = CookieFunctions.getConsentCookie();\n    if (!currentConsentCookie || !CookieFunctions.isValidConsentCookie(currentConsentCookie)) {\n        // If the consent cookie version is not valid, we need to remove any cookies which have been\n        // set previously\n        CookieFunctions.resetCookies();\n        this.$cookieBanner.removeAttribute('hidden');\n    }\n    this.$acceptButton.addEventListener('click', this.acceptCookies.bind(this));\n    this.$rejectButton.addEventListener('click', this.rejectCookies.bind(this));\n    nodeListForEach(this.$cookieBannerHideButtons, function ($cookieBannerHideButton) {\n        $cookieBannerHideButton.addEventListener('click', this.hideBanner.bind(this));\n    }.bind(this));\n};\nCookieBanner.prototype.hideBanner = function () {\n    this.$cookieBanner.setAttribute('hidden', true);\n};\nCookieBanner.prototype.acceptCookies = function () {\n    // Do actual cookie consent bit\n    CookieFunctions.setConsentCookie({ analytics: true });\n    updateAnalyticsStorageConsent(true);\n    updateClarityConsent(true);\n    sendAnalyticsCustomEvent(true, 'banner');\n    sendPageViewEvent();\n    sendFilterPageCustomEvent();\n    // Hide banner and show confirmation message\n    this.$cookieMessage.setAttribute('hidden', true);\n    this.revealConfirmationMessage(this.$cookieConfirmationAccept);\n};\nCookieBanner.prototype.rejectCookies = function () {\n    updateAnalyticsStorageConsent(true);\n    sendAnalyticsCustomEvent(false, 'banner');\n    updateAnalyticsStorageConsent(false);\n    updateClarityConsent(false);\n    //setTimeout(CookieFunctions.setConsentCookie.bind({ analytics: false }), 250);\n    CookieFunctions.setConsentCookie({ analytics: false });\n    // Hide banner and show confirmation message\n    this.$cookieMessage.setAttribute('hidden', true);\n    this.revealConfirmationMessage(this.$cookieConfirmationReject);\n};\nCookieBanner.prototype.revealConfirmationMessage = function (confirmationMessage) {\n    confirmationMessage.removeAttribute('hidden');\n    // Set tabindex to -1 to make the confirmation banner focusable with JavaScript\n    if (!confirmationMessage.getAttribute('tabindex')) {\n        confirmationMessage.setAttribute('tabindex', '-1');\n        confirmationMessage.addEventListener('blur', function () {\n            confirmationMessage.removeAttribute('tabindex');\n        });\n    }\n    confirmationMessage.focus();\n};\nCookieBanner.prototype.onCookiesPage = function () {\n    return window.location.pathname === '/cookies/';\n};\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","import { getConsentCookie, setConsentCookie } from './cookie-functions';\nimport { nodeListForEach } from './helpers';\nimport { sendPageViewEvent, sendAnalyticsCustomEvent, updateAnalyticsStorageConsent } from './analytics';\nimport { updateConsent as updateClarityConsent } from \"./clarity\";\nfunction CookiesPage($module) {\n    this.$module = $module;\n}\nCookiesPage.prototype.init = function () {\n    this.$cookiePage = this.$module;\n    if (!this.$cookiePage) {\n        return;\n    }\n    this.$cookieForm = this.$cookiePage.querySelector('.js-cookies-page-form');\n    this.$cookieFormFieldsets = this.$cookieForm.querySelectorAll('.js-cookies-page-form-fieldset');\n    this.$successNotification = this.$cookiePage.querySelector('.js-cookies-page-success');\n    this.$successLink = this.$cookiePage.querySelector('.js-cookies-page-success-link');\n    nodeListForEach(this.$cookieFormFieldsets, function ($cookieFormFieldset) {\n        this.showUserPreference($cookieFormFieldset, getConsentCookie());\n        /*        $cookieFormFieldset.removeAttribute('hidden')*/\n    }.bind(this));\n    // Show submit button\n    //this.$cookieForm.querySelector('.js-cookies-form-button').removeAttribute('hidden')\n    this.$cookieForm.addEventListener('submit', this.savePreferences.bind(this));\n};\nCookiesPage.prototype.savePreferences = function (event) {\n    // Stop default form submission behaviour\n    event.preventDefault();\n    var preferences = {};\n    nodeListForEach(this.$cookieFormFieldsets, function ($cookieFormFieldset) {\n        var cookieType = this.getCookieType($cookieFormFieldset);\n        var selectedItem = $cookieFormFieldset.querySelector('input[name=' + cookieType + ']:checked').value;\n        preferences[cookieType] = selectedItem === 'true';\n    }.bind(this));\n    updateAnalyticsStorageConsent(true);\n    const analyticsAccepted = preferences['analytics'];\n    sendAnalyticsCustomEvent(analyticsAccepted, 'cookies');\n    if (analyticsAccepted) {\n        sendPageViewEvent();\n    }\n    else {\n        updateAnalyticsStorageConsent(false);\n    }\n    updateClarityConsent(analyticsAccepted);\n    setConsentCookie(preferences);\n    // handle the corner case, where the user has selected their preference on the cookie page, whilst the banner is still open as they haven't previously selected their preference\n    //todo: call hideBanner\n    var banner = document.querySelector('[data-module=\"govuk-cookie-banner\"]');\n    banner.setAttribute('hidden', 'true');\n    this.showSuccessNotification();\n};\nCookiesPage.prototype.showUserPreference = function ($cookieFormFieldset, preferences) {\n    var cookieType = this.getCookieType($cookieFormFieldset);\n    var preference = false;\n    if (cookieType && preferences && preferences[cookieType] !== undefined) {\n        preference = preferences[cookieType];\n    }\n    var radioValue = preference ? 'true' : 'false';\n    var radio = $cookieFormFieldset.querySelector('input[name=' + cookieType + '][value=' + radioValue + ']');\n    radio.checked = true;\n};\nCookiesPage.prototype.showSuccessNotification = function () {\n    this.$successNotification.removeAttribute('hidden');\n    // if the user's come to the cookies page through the link in the cookie banner, show a link to take them back to the page they came from\n    //todo: use full url?\n    var referrer = document.referrer ? new URL(document.referrer).pathname : false;\n    if (referrer && referrer !== document.location.pathname) {\n        this.$successLink.href = referrer;\n        this.$successLink.removeAttribute('hidden');\n    }\n    else {\n        this.$successLink.setAttribute('hidden', 'true');\n    }\n    // Set tabindex to -1 to make the element focusable with JavaScript.\n    // GOV.UK Frontend will remove the tabindex on blur as the component doesn't\n    // need to be focusable after the user has read the text.\n    if (!this.$successNotification.getAttribute('tabindex')) {\n        this.$successNotification.setAttribute('tabindex', '-1');\n    }\n    this.$successNotification.focus();\n    // scroll to the top of the page\n    window.scrollTo(0, 0);\n};\nCookiesPage.prototype.getCookieType = function ($cookieFormFieldset) {\n    return $cookieFormFieldset.id;\n};\nexport default CookiesPage;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","// A version of the MOJ's add-another component that plays nice with the accessible autocomplete component\n// and works with errored fields.\n// I did consider subclassing the MOJ's add-another component,\n// but it would have been so coupled that it would've probably broken on an update of the MOJ library.\n// So instead we forked it and made our own version.\n//todo: when accessible-autocomplete creates the input, it doesn't handle the aria-describedby correctly...\n// https://github.com/alphagov/accessible-autocomplete/issues/589\nwindow.FamilyHubsFrontend = window.FamilyHubsFrontend || {};\nexport function initializeAddAnother() {\n    //todo: support options with scope?\n    var $addAnothers = document.querySelectorAll('[data-module=\"fh-add-another\"]');\n    $addAnothers.forEach(function ($addAnother) {\n        new window.FamilyHubsFrontend.AddAnother($addAnother);\n    });\n}\nwindow.FamilyHubsFrontend.AddAnother = function (container) {\n    this.container = $(container);\n    this.index = 0;\n    if (this.container.data('fh-add-another-initialised')) {\n        return;\n    }\n    //todo: this is a bit hacky - find a better way to do this\n    var functionName = container.getAttribute('data-fh-add-another-callback');\n    this.callback = null;\n    document.addEventListener('DOMContentLoaded', function () {\n        if (typeof window[functionName] === 'function') {\n            this.callback = window[functionName];\n            this.callback(container);\n        }\n    }.bind(this));\n    this.container.data('fh-add-another-initialised', true);\n    this.container.on('click', '.fh-add-another__remove-button', $.proxy(this, 'onRemoveButtonClick'));\n    this.container.on('click', '.fh-add-another__add-button', $.proxy(this, 'onAddButtonClick'));\n    this.container.find('.fh-add-another__add-button, fh-add-another__remove-button').prop('type', 'submit');\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.onAddButtonClick = function (e) {\n    var item = this.getNewItem();\n    var firstItem = this.getItems().first();\n    if (!this.hasRemoveButton(firstItem)) {\n        this.createRemoveButton(firstItem);\n    }\n    this.getItems().last().after(item);\n    item.find('input, textarea, select').first().focus();\n    e.preventDefault();\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.hasRemoveButton = function (item) {\n    return item.find('.fh-add-another__remove-button').length;\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.getItems = function () {\n    return this.container.find('.fh-add-another__item');\n};\n// todo: ? a better approach would be to have a template item that we clone,\n// rather than having to strip the error from the first item\nwindow.FamilyHubsFrontend.AddAnother.prototype.stripErrorFromNewItem = function (item) {\n    // remove the govuk-form-group--error class from any divs that have it set\n    item.querySelectorAll('div.govuk-form-group--error').forEach(function (el, index) {\n        el.classList.remove('govuk-form-group--error');\n    });\n    // find all paragraphs with the class govuk-error-message and remove them\n    item.querySelectorAll('p.govuk-error-message').forEach(function (el, index) {\n        el.parentNode.removeChild(el);\n    });\n    // remove the govuk-select--error class from any selects that have it set\n    item.querySelectorAll('select.govuk-select--error').forEach(function (el, index) {\n        el.classList.remove('govuk-select--error');\n    });\n    // remove the govuk-input--error class from any inputs that have it set\n    item.querySelectorAll('input.govuk-input--error').forEach(function (el, index) {\n        el.classList.remove('govuk-input--error');\n    });\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.getNewItem = function () {\n    // get the first item and clone it\n    const items = this.getItems();\n    const item = items[0].cloneNode(true);\n    this.stripErrorFromNewItem(item);\n    // find the autocomplete wrappers and remove the elements that are added by accessible-autocomplete\n    const autocompleteWrappers = item.querySelectorAll('.autocomplete__wrapper');\n    autocompleteWrappers.forEach(wrapper => {\n        if (wrapper.parentNode.parentNode) {\n            wrapper.parentNode.parentNode.removeChild(wrapper.parentNode);\n        }\n    });\n    var $item = $(item);\n    // update the id and name attributes\n    this.updateAttributes(++this.index, $item);\n    this.resetItem($item);\n    // call the callback which needs to apply accessibility-autocomplete enhancements to the new item\n    if (typeof this.callback === 'function') {\n        this.callback(item);\n    }\n    // Create a remove button if it doesn't exist\n    if (!this.hasRemoveButton($item)) {\n        this.createRemoveButton($item);\n    }\n    return $item;\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.updateAttributes = function (index, item) {\n    item.find('[data-name]').each(function (i, el) {\n        var originalId = el.id;\n        el.name = $(el).attr('data-name').replace(/%index%/, index);\n        el.id = $(el).attr('data-id').replace(/%index%/, index);\n        var label = $(el).siblings('label')[0] || $(el).parents('label')[0] || item.find('[for=\"' + originalId + '\"]')[0];\n        label.htmlFor = el.id;\n    });\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.createRemoveButton = function (item) {\n    item.append('<button type=\"submit\" class=\"govuk-button govuk-button--secondary fh-add-another__remove-button\">Remove</button>');\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.resetItem = function (item) {\n    // accessibile-autocomplete adds an input (without data-name or data-id)\n    // so we blank all input controls\n    item.find('input, textarea, select').each(function (index, el) {\n        if (el.type == 'checkbox' || el.type == 'radio') {\n            el.checked = false;\n        }\n        else {\n            el.value = '';\n        }\n    });\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.onRemoveButtonClick = function (e) {\n    $(e.currentTarget).parents('.fh-add-another__item').remove();\n    var items = this.getItems();\n    if (items.length === 1) {\n        items.find('.fh-add-another__remove-button').remove();\n    }\n    this.focusHeading();\n    e.preventDefault();\n};\nwindow.FamilyHubsFrontend.AddAnother.prototype.focusHeading = function () {\n    this.container.find('.fh-add-another__heading').focus();\n};\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","export function initializeAutocompletes() {\n    var autocompletes = document.querySelectorAll('[data-module=\"fh-autocomplete\"]');\n    autocompletes.forEach(function (autocomplete) {\n        accessibleAutocomplete.enhanceSelectElement({\n            selectElement: autocomplete\n        });\n    });\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvYXV0b2NvbXBsZXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLE1BQU0sVUFBVSx1QkFBdUI7SUFDbkMsSUFBSSxhQUFhLEdBQWtDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0lBQ2hILGFBQWEsQ0FBQyxPQUFPLENBQUMsVUFBVSxZQUFZO1FBQ3hDLHNCQUFzQixDQUFDLG9CQUFvQixDQUFDO1lBQ3hDLGFBQWEsRUFBRSxZQUFZO1NBQzlCLENBQUMsQ0FBQTtJQUNOLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyIsImZpbGUiOiJjb21wb25lbnRzL2F1dG9jb21wbGV0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy90b2RvOiBpcyB0aGVyZSBhIC5kLnRzIGZvciBhY2Nlc3NpYmxlLWF1dG9jb21wbGV0ZT9cbmRlY2xhcmUgY29uc3QgYWNjZXNzaWJsZUF1dG9jb21wbGV0ZTogYW55O1xuXG5leHBvcnQgZnVuY3Rpb24gaW5pdGlhbGl6ZUF1dG9jb21wbGV0ZXMoKTogdm9pZCB7XG4gICAgdmFyIGF1dG9jb21wbGV0ZXM6IE5vZGVMaXN0T2Y8SFRNTFNlbGVjdEVsZW1lbnQ+ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtbW9kdWxlPVwiZmgtYXV0b2NvbXBsZXRlXCJdJyk7XG4gICAgYXV0b2NvbXBsZXRlcy5mb3JFYWNoKGZ1bmN0aW9uIChhdXRvY29tcGxldGUpIHtcbiAgICAgICAgYWNjZXNzaWJsZUF1dG9jb21wbGV0ZS5lbmhhbmNlU2VsZWN0RWxlbWVudCh7XG4gICAgICAgICAgICBzZWxlY3RFbGVtZW50OiBhdXRvY29tcGxldGVcbiAgICAgICAgfSlcbiAgICB9KTtcbn1cbiJdfQ==\n","import { nodeListForEach } from './helpers';\nexport function initializeBackButtons() {\n    // Check if the page wasn't opened in a new tab or a standalone window\n    if (history.length > 1) {\n        const backLinks = document.querySelectorAll(\".fh-back-link\");\n        nodeListForEach(backLinks, (link) => {\n            link.classList.add(\"fh-back-link-visible\");\n            // set the href to the last page in the history\n            link.href = document.referrer;\n        });\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvYmFjay1saW5rcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sV0FBVyxDQUFBO0FBRTNDLE1BQU0sVUFBVSxxQkFBcUI7SUFFakMsc0VBQXNFO0lBQ3RFLElBQUksT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUVyQixNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDN0QsZUFBZSxDQUFDLFNBQVMsRUFBRSxDQUFDLElBQXVCLEVBQUUsRUFBRTtZQUVuRCxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1lBRTNDLCtDQUErQztZQUMvQyxJQUFJLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQyxRQUFRLENBQUM7UUFDbEMsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0FBQ0wsQ0FBQyIsImZpbGUiOiJjb21wb25lbnRzL2JhY2stbGlua3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBub2RlTGlzdEZvckVhY2ggfSBmcm9tICcuL2hlbHBlcnMnXG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplQmFja0J1dHRvbnMoKTogdm9pZCB7XG5cbiAgICAvLyBDaGVjayBpZiB0aGUgcGFnZSB3YXNuJ3Qgb3BlbmVkIGluIGEgbmV3IHRhYiBvciBhIHN0YW5kYWxvbmUgd2luZG93XG4gICAgaWYgKGhpc3RvcnkubGVuZ3RoID4gMSkge1xuXG4gICAgICAgIGNvbnN0IGJhY2tMaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZmgtYmFjay1saW5rXCIpO1xuICAgICAgICBub2RlTGlzdEZvckVhY2goYmFja0xpbmtzLCAobGluazogSFRNTEFuY2hvckVsZW1lbnQpID0+IHtcblxuICAgICAgICAgICAgbGluay5jbGFzc0xpc3QuYWRkKFwiZmgtYmFjay1saW5rLXZpc2libGVcIik7XG5cbiAgICAgICAgICAgIC8vIHNldCB0aGUgaHJlZiB0byB0aGUgbGFzdCBwYWdlIGluIHRoZSBoaXN0b3J5XG4gICAgICAgICAgICBsaW5rLmhyZWYgPSBkb2N1bWVudC5yZWZlcnJlcjtcbiAgICAgICAgfSk7XG4gICAgfVxufSJdfQ==\n","import { nodeListForEach } from './helpers';\nexport function initializeVisibilityToggles() {\n    const visibilityToggles = document.querySelectorAll(\"[data-toggle-visibility-id]\");\n    nodeListForEach(visibilityToggles, (toggle) => {\n        toggle.addEventListener('click', function handleClick(event) {\n            let toToggleId = toggle.getAttribute(\"data-toggle-visibility-id\");\n            if (toToggleId) {\n                let toToggle = document.getElementById(toToggleId);\n                if (toToggle) {\n                    if (toToggle.style.display === \"none\") {\n                        toToggle.style.display = \"block\";\n                    }\n                    else {\n                        toToggle.style.display = \"none\";\n                    }\n                }\n            }\n        });\n    });\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvdmlzaWJpbGl0eS10b2dnbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLFdBQVcsQ0FBQTtBQUUzQyxNQUFNLFVBQVUsMkJBQTJCO0lBRXZDLE1BQU0saUJBQWlCLEdBQUcsUUFBUSxDQUFDLGdCQUFnQixDQUFDLDZCQUE2QixDQUFDLENBQUM7SUFDbkYsZUFBZSxDQUFDLGlCQUFpQixFQUM3QixDQUFDLE1BQW1CLEVBQUUsRUFBRTtRQUVwQixNQUFNLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUMzQixTQUFTLFdBQVcsQ0FBQyxLQUFLO1lBRXRCLElBQUksVUFBVSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsMkJBQTJCLENBQUMsQ0FBQztZQUNsRSxJQUFJLFVBQVUsRUFBRSxDQUFDO2dCQUNiLElBQUksUUFBUSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQ25ELElBQUksUUFBUSxFQUFFLENBQUM7b0JBQ1gsSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLE9BQU8sS0FBSyxNQUFNLEVBQUUsQ0FBQzt3QkFDcEMsUUFBUSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO29CQUNyQyxDQUFDO3lCQUFNLENBQUM7d0JBQ0osUUFBUSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO29CQUNwQyxDQUFDO2dCQUNMLENBQUM7WUFDTCxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDWCxDQUFDLENBQUMsQ0FBQztBQUNYLENBQUMiLCJmaWxlIjoiY29tcG9uZW50cy92aXNpYmlsaXR5LXRvZ2dsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5vZGVMaXN0Rm9yRWFjaCB9IGZyb20gJy4vaGVscGVycydcblxuZXhwb3J0IGZ1bmN0aW9uIGluaXRpYWxpemVWaXNpYmlsaXR5VG9nZ2xlcygpOiB2b2lkIHtcblxuICAgIGNvbnN0IHZpc2liaWxpdHlUb2dnbGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLXRvZ2dsZS12aXNpYmlsaXR5LWlkXVwiKTtcbiAgICBub2RlTGlzdEZvckVhY2godmlzaWJpbGl0eVRvZ2dsZXMsXG4gICAgICAgICh0b2dnbGU6IEhUTUxFbGVtZW50KSA9PiB7XG5cbiAgICAgICAgICAgIHRvZ2dsZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gaGFuZGxlQ2xpY2soZXZlbnQpIHtcblxuICAgICAgICAgICAgICAgICAgICBsZXQgdG9Ub2dnbGVJZCA9IHRvZ2dsZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXRvZ2dsZS12aXNpYmlsaXR5LWlkXCIpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodG9Ub2dnbGVJZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHRvVG9nZ2xlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodG9Ub2dnbGVJZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodG9Ub2dnbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodG9Ub2dnbGUuc3R5bGUuZGlzcGxheSA9PT0gXCJub25lXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9Ub2dnbGUuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b1RvZ2dsZS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xufSJdfQ==\n","//todo: make it a standard govuk module?\n//import { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n/*todo: rename fh-open-close-target-user-opened fh-open-close-target-open-non-desktop or somesuch */\nexport class OpenCloseButton {\n    constructor(openCloseButton) {\n        //super();\n        //if (!(openCloseButton instanceof HTMLButtonElement)) {\n        //}\n        this.openCloseButton = openCloseButton;\n        const targetId = this.openCloseButton.getAttribute('data-open-close-mobile');\n        this.target = document.getElementById(targetId);\n        this.showText = this.openCloseButton.textContent;\n        this.hideText = this.openCloseButton.getAttribute('data-open-close-mobile-hide');\n        this.target.classList.add('fh-open-close-target');\n        let defaultTargetVisibility = this.openCloseButton.getAttribute('data-open-close-mobile-default');\n        if (defaultTargetVisibility === \"hide\") {\n            this.hideTarget();\n        }\n        else {\n            this.showTarget();\n        }\n        this.openCloseButton.addEventListener('click', (event) => this.handleClick(event));\n    }\n    handleClick(event) {\n        if (this.target.classList.contains('fh-open-close-target-user-opened')) {\n            this.hideTarget();\n        }\n        else {\n            this.showTarget();\n        }\n    }\n    showTarget() {\n        if (this.target) {\n            if (!this.target.classList.contains('fh-open-close-target-user-opened')) {\n                this.target.classList.add('fh-open-close-target-user-opened');\n            }\n        }\n        if (this.hideText) {\n            this.openCloseButton.textContent = this.hideText;\n        }\n    }\n    hideTarget() {\n        if (this.target) {\n            this.target.classList.remove('fh-open-close-target-user-opened');\n        }\n        if (this.showText) {\n            this.openCloseButton.textContent = this.showText;\n        }\n    }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvb3Blbi1jbG9zZS1idXR0b24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0NBQXdDO0FBQ3hDLDZFQUE2RTtBQUU3RSxvR0FBb0c7QUFFcEcsTUFBTSxPQUFPLGVBQWU7SUFPeEIsWUFBWSxlQUFrQztRQUMxQyxVQUFVO1FBRVYsd0RBQXdEO1FBQ3hELEdBQUc7UUFFSCxJQUFJLENBQUMsZUFBZSxHQUFHLGVBQWUsQ0FBQztRQUN2QyxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1FBQzdFLElBQUksQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFTLENBQXVCLENBQUM7UUFFdkUsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLFdBQVcsQ0FBQztRQUNqRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxDQUFDLDZCQUE2QixDQUFDLENBQUM7UUFFakYsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFFbEQsSUFBSSx1QkFBdUIsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1FBQ2xHLElBQUksdUJBQXVCLEtBQUssTUFBTSxFQUFFLENBQUM7WUFDckMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3RCLENBQUM7YUFBTSxDQUFDO1lBQ0osSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3RCLENBQUM7UUFFRCxJQUFJLENBQUMsZUFBZSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3ZGLENBQUM7SUFFRCxXQUFXLENBQUMsS0FBWTtRQUNwQixJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxrQ0FBa0MsQ0FBQyxFQUFFLENBQUM7WUFDckUsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3RCLENBQUM7YUFBTSxDQUFDO1lBQ0osSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3RCLENBQUM7SUFDTCxDQUFDO0lBRUQsVUFBVTtRQUNOLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxrQ0FBa0MsQ0FBQyxFQUFFLENBQUM7Z0JBQ3RFLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO1lBQ2xFLENBQUM7UUFDTCxDQUFDO1FBQ0QsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDaEIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNyRCxDQUFDO0lBQ0wsQ0FBQztJQUNELFVBQVU7UUFDTixJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUNkLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO1FBQ3JFLENBQUM7UUFDRCxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNoQixJQUFJLENBQUMsZUFBZSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3JELENBQUM7SUFDTCxDQUFDO0NBS0oiLCJmaWxlIjoiY29tcG9uZW50cy9vcGVuLWNsb3NlLWJ1dHRvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vdG9kbzogbWFrZSBpdCBhIHN0YW5kYXJkIGdvdnVrIG1vZHVsZT9cbi8vaW1wb3J0IHsgR09WVUtGcm9udGVuZENvbXBvbmVudCB9IGZyb20gJy4uLy4uL2dvdnVrLWZyb250ZW5kLWNvbXBvbmVudC5tanMnXG5cbi8qdG9kbzogcmVuYW1lIGZoLW9wZW4tY2xvc2UtdGFyZ2V0LXVzZXItb3BlbmVkIGZoLW9wZW4tY2xvc2UtdGFyZ2V0LW9wZW4tbm9uLWRlc2t0b3Agb3Igc29tZXN1Y2ggKi9cblxuZXhwb3J0IGNsYXNzIE9wZW5DbG9zZUJ1dHRvbiB7IC8vIGV4dGVuZHMgR09WVUtGcm9udGVuZENvbXBvbmVudCB7XG5cbiAgICBvcGVuQ2xvc2VCdXR0b246IEhUTUxCdXR0b25FbGVtZW50O1xuICAgIHRhcmdldDogSFRNTEVsZW1lbnQgfCBudWxsO1xuICAgIHNob3dUZXh0OiBzdHJpbmcgfCBudWxsO1xuICAgIGhpZGVUZXh0OiBzdHJpbmcgfCBudWxsO1xuXG4gICAgY29uc3RydWN0b3Iob3BlbkNsb3NlQnV0dG9uOiBIVE1MQnV0dG9uRWxlbWVudCkge1xuICAgICAgICAvL3N1cGVyKCk7XG5cbiAgICAgICAgLy9pZiAoIShvcGVuQ2xvc2VCdXR0b24gaW5zdGFuY2VvZiBIVE1MQnV0dG9uRWxlbWVudCkpIHtcbiAgICAgICAgLy99XG5cbiAgICAgICAgdGhpcy5vcGVuQ2xvc2VCdXR0b24gPSBvcGVuQ2xvc2VCdXR0b247XG4gICAgICAgIGNvbnN0IHRhcmdldElkID0gdGhpcy5vcGVuQ2xvc2VCdXR0b24uZ2V0QXR0cmlidXRlKCdkYXRhLW9wZW4tY2xvc2UtbW9iaWxlJyk7XG4gICAgICAgIHRoaXMudGFyZ2V0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGFyZ2V0SWQhKSBhcyBIVE1MRWxlbWVudCB8IG51bGw7XG5cbiAgICAgICAgdGhpcy5zaG93VGV4dCA9IHRoaXMub3BlbkNsb3NlQnV0dG9uLnRleHRDb250ZW50O1xuICAgICAgICB0aGlzLmhpZGVUZXh0ID0gdGhpcy5vcGVuQ2xvc2VCdXR0b24uZ2V0QXR0cmlidXRlKCdkYXRhLW9wZW4tY2xvc2UtbW9iaWxlLWhpZGUnKTtcblxuICAgICAgICB0aGlzLnRhcmdldC5jbGFzc0xpc3QuYWRkKCdmaC1vcGVuLWNsb3NlLXRhcmdldCcpO1xuXG4gICAgICAgIGxldCBkZWZhdWx0VGFyZ2V0VmlzaWJpbGl0eSA9IHRoaXMub3BlbkNsb3NlQnV0dG9uLmdldEF0dHJpYnV0ZSgnZGF0YS1vcGVuLWNsb3NlLW1vYmlsZS1kZWZhdWx0Jyk7XG4gICAgICAgIGlmIChkZWZhdWx0VGFyZ2V0VmlzaWJpbGl0eSA9PT0gXCJoaWRlXCIpIHtcbiAgICAgICAgICAgIHRoaXMuaGlkZVRhcmdldCgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zaG93VGFyZ2V0KCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLm9wZW5DbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4gdGhpcy5oYW5kbGVDbGljayhldmVudCkpO1xuICAgIH1cblxuICAgIGhhbmRsZUNsaWNrKGV2ZW50OiBFdmVudCkge1xuICAgICAgICBpZiAodGhpcy50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdmaC1vcGVuLWNsb3NlLXRhcmdldC11c2VyLW9wZW5lZCcpKSB7XG4gICAgICAgICAgICB0aGlzLmhpZGVUYXJnZXQoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2hvd1RhcmdldCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2hvd1RhcmdldCgpIHtcbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0KSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnZmgtb3Blbi1jbG9zZS10YXJnZXQtdXNlci1vcGVuZWQnKSkge1xuICAgICAgICAgICAgICAgIHRoaXMudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2ZoLW9wZW4tY2xvc2UtdGFyZ2V0LXVzZXItb3BlbmVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuaGlkZVRleHQpIHtcbiAgICAgICAgICAgIHRoaXMub3BlbkNsb3NlQnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5oaWRlVGV4dDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBoaWRlVGFyZ2V0KCkge1xuICAgICAgICBpZiAodGhpcy50YXJnZXQpIHtcbiAgICAgICAgICAgIHRoaXMudGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoJ2ZoLW9wZW4tY2xvc2UtdGFyZ2V0LXVzZXItb3BlbmVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuc2hvd1RleHQpIHtcbiAgICAgICAgICAgIHRoaXMub3BlbkNsb3NlQnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5zaG93VGV4dDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBOYW1lIGZvciB0aGUgY29tcG9uZW50IHVzZWQgd2hlbiBpbml0aWFsaXNpbmcgdXNpbmcgZGF0YS1tb2R1bGUgYXR0cmlidXRlcy5cbiAgICAgKi9cbi8qICAgIHN0YXRpYyBtb2R1bGVOYW1lID0gJ29wZW4tY2xvc2UtYnV0dG9uJzsqL1xufVxuIl19\n","// js components were originally snaffled from https://github.com/alphagov/govuk-design-system/blob/main/src/javascripts/components/\n//todo: swap to a components folder?\nimport { getConsentCookie } from \"./components/cookie-functions\";\nimport CookieBanner from './components/cookie-banner';\nimport CookiesPage from './components/cookies-page';\nimport initAnalytics from './components/analytics';\nimport initClarity from './components/clarity';\nimport { initializeAddAnother } from './components/add-another';\nimport { initializeAutocompletes } from './components/autocomplete';\nimport { initializeBackButtons } from './components/back-links';\nimport { initializeVisibilityToggles } from './components/visibility-toggle';\nimport { OpenCloseButton } from './components/open-close-button';\n//todo: consistency in module/proto/class style\nwindow.FamilyHubsFrontend = window.FamilyHubsFrontend || {};\nwindow.FamilyHubsFrontend.initAll = () => {\n    // Initialise cookie banner\n    const $cookieBanner = document.querySelector('[data-module=\"govuk-cookie-banner\"]');\n    new CookieBanner($cookieBanner).init();\n    const userConsent = getConsentCookie();\n    initAnalytics(window.GA_MEASUREMENT_ID, userConsent);\n    initClarity(window.CLARITY_ID, userConsent);\n    //todo: move this into scripts section on cookie page\n    // Initialise cookie page\n    var $cookiesPage = document.querySelector('[data-module=\"fh-cookies-page\"]');\n    new CookiesPage($cookiesPage).init();\n    initializeBackButtons();\n    initializeVisibilityToggles();\n    //todo: ordering between these two?\n    initializeAddAnother();\n    initializeAutocompletes();\n    // initialise open close buttons\n    let openCloseButtons = document.querySelectorAll('button[data-open-close-mobile]');\n    openCloseButtons === null || openCloseButtons === void 0 ? void 0 : openCloseButtons.forEach((openCloseButton) => {\n        new OpenCloseButton(openCloseButton);\n    });\n};\n//todo: do we want to do this...\n//document.addEventListener(\"DOMContentLoaded\", function () {\nwindow.GOVUKFrontend.initAll();\nwindow.MOJFrontend.initAll();\nwindow.FamilyHubsFrontend.initAll();\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZhbWlseWh1YnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0lBQW9JO0FBRXBJLG9DQUFvQztBQUVwQyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQztBQW9CL0QsT0FBTyxZQUFZLE1BQU0sNEJBQTRCLENBQUE7QUFDckQsT0FBTyxXQUFXLE1BQU0sMkJBQTJCLENBQUE7QUFDbkQsT0FBTyxhQUFhLE1BQU0sd0JBQXdCLENBQUM7QUFDbkQsT0FBTyxXQUFXLE1BQU0sc0JBQXNCLENBQUM7QUFDL0MsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDcEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDaEUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDN0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBRWpFLCtDQUErQztBQUUvQyxNQUFNLENBQUMsa0JBQWtCLEdBQUcsTUFBTSxDQUFDLGtCQUFrQixJQUFJLEVBQUUsQ0FBQztBQUM1RCxNQUFNLENBQUMsa0JBQWtCLENBQUMsT0FBTyxHQUFHLEdBQUcsRUFBRTtJQUVyQywyQkFBMkI7SUFDM0IsTUFBTSxhQUFhLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxxQ0FBcUMsQ0FBdUIsQ0FBQztJQUMxRyxJQUFJLFlBQVksQ0FBQyxhQUFhLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUV2QyxNQUFNLFdBQVcsR0FBRyxnQkFBZ0IsRUFBRSxDQUFDO0lBQ3ZDLGFBQWEsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDckQsV0FBVyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFFNUMscURBQXFEO0lBQ3JELHlCQUF5QjtJQUN6QixJQUFJLFlBQVksR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLGlDQUFpQyxDQUFDLENBQUM7SUFDN0UsSUFBSSxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7SUFFckMscUJBQXFCLEVBQUUsQ0FBQztJQUN4QiwyQkFBMkIsRUFBRSxDQUFDO0lBQzlCLG1DQUFtQztJQUNuQyxvQkFBb0IsRUFBRSxDQUFDO0lBQ3ZCLHVCQUF1QixFQUFFLENBQUM7SUFFMUIsZ0NBQWdDO0lBQ2hDLElBQUksZ0JBQWdCLEdBQWtDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO0lBQ2xILGdCQUFnQixhQUFoQixnQkFBZ0IsdUJBQWhCLGdCQUFnQixDQUFFLE9BQU8sQ0FBQyxDQUFDLGVBQWUsRUFBRSxFQUFFO1FBQzFDLElBQUksZUFBZSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQ3pDLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDO0FBRUYsZ0NBQWdDO0FBQ2hDLDZEQUE2RDtBQUU3RCxNQUFNLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQy9CLE1BQU0sQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDN0IsTUFBTSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sRUFBRSxDQUFDIiwiZmlsZSI6ImZhbWlseWh1YnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBqcyBjb21wb25lbnRzIHdlcmUgb3JpZ2luYWxseSBzbmFmZmxlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hbHBoYWdvdi9nb3Z1ay1kZXNpZ24tc3lzdGVtL2Jsb2IvbWFpbi9zcmMvamF2YXNjcmlwdHMvY29tcG9uZW50cy9cblxuLy90b2RvOiBzd2FwIHRvIGEgY29tcG9uZW50cyBmb2xkZXI/XG5cbmltcG9ydCB7Z2V0Q29uc2VudENvb2tpZX0gZnJvbSBcIi4vY29tcG9uZW50cy9jb29raWUtZnVuY3Rpb25zXCI7XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICBpbnRlcmZhY2UgV2luZG93IHtcbiAgICAgICAgR0RTX0NPTlNFTlRfQ09PS0lFX1ZFUlNJT046IG51bWJlcjtcbiAgICAgICAgR0FfTUVBU1VSRU1FTlRfSUQ6IHN0cmluZztcbiAgICAgICAgR0FfQ09OVEFJTkVSX0lEOiBzdHJpbmc7XG4gICAgICAgIEdBX0NPT0tJRV9OQU1FOiBzdHJpbmc7XG4gICAgICAgIENMQVJJVFlfSUQ6IHN0cmluZztcbiAgICAgICAgZGF0YUxheWVyOiBhbnlbXTtcbiAgICAgICAgRmFtaWx5SHVic0Zyb250ZW5kOiBhbnk7XG4gICAgICAgIEdPVlVLRnJvbnRlbmQ6IHtcbiAgICAgICAgICAgIGluaXRBbGw6ICgpID0+IHZvaWQ7XG4gICAgICAgIH1cbiAgICAgICAgTU9KRnJvbnRlbmQ6IHtcbiAgICAgICAgICAgIGluaXRBbGw6ICgpID0+IHZvaWQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmltcG9ydCBDb29raWVCYW5uZXIgZnJvbSAnLi9jb21wb25lbnRzL2Nvb2tpZS1iYW5uZXInXG5pbXBvcnQgQ29va2llc1BhZ2UgZnJvbSAnLi9jb21wb25lbnRzL2Nvb2tpZXMtcGFnZSdcbmltcG9ydCBpbml0QW5hbHl0aWNzIGZyb20gJy4vY29tcG9uZW50cy9hbmFseXRpY3MnO1xuaW1wb3J0IGluaXRDbGFyaXR5IGZyb20gJy4vY29tcG9uZW50cy9jbGFyaXR5JztcbmltcG9ydCB7IGluaXRpYWxpemVBZGRBbm90aGVyIH0gZnJvbSAnLi9jb21wb25lbnRzL2FkZC1hbm90aGVyJztcbmltcG9ydCB7IGluaXRpYWxpemVBdXRvY29tcGxldGVzIH0gZnJvbSAnLi9jb21wb25lbnRzL2F1dG9jb21wbGV0ZSc7XG5pbXBvcnQgeyBpbml0aWFsaXplQmFja0J1dHRvbnMgfSBmcm9tICcuL2NvbXBvbmVudHMvYmFjay1saW5rcyc7XG5pbXBvcnQgeyBpbml0aWFsaXplVmlzaWJpbGl0eVRvZ2dsZXMgfSBmcm9tICcuL2NvbXBvbmVudHMvdmlzaWJpbGl0eS10b2dnbGUnO1xuaW1wb3J0IHsgT3BlbkNsb3NlQnV0dG9uIH0gZnJvbSAnLi9jb21wb25lbnRzL29wZW4tY2xvc2UtYnV0dG9uJztcblxuLy90b2RvOiBjb25zaXN0ZW5jeSBpbiBtb2R1bGUvcHJvdG8vY2xhc3Mgc3R5bGVcblxud2luZG93LkZhbWlseUh1YnNGcm9udGVuZCA9IHdpbmRvdy5GYW1pbHlIdWJzRnJvbnRlbmQgfHwge307XG53aW5kb3cuRmFtaWx5SHVic0Zyb250ZW5kLmluaXRBbGwgPSAoKSA9PiB7XG5cbiAgICAvLyBJbml0aWFsaXNlIGNvb2tpZSBiYW5uZXJcbiAgICBjb25zdCAkY29va2llQmFubmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbW9kdWxlPVwiZ292dWstY29va2llLWJhbm5lclwiXScpIGFzIEhUTUxFbGVtZW50IHwgbnVsbDtcbiAgICBuZXcgQ29va2llQmFubmVyKCRjb29raWVCYW5uZXIpLmluaXQoKTtcblxuICAgIGNvbnN0IHVzZXJDb25zZW50ID0gZ2V0Q29uc2VudENvb2tpZSgpO1xuICAgIGluaXRBbmFseXRpY3Mod2luZG93LkdBX01FQVNVUkVNRU5UX0lELCB1c2VyQ29uc2VudCk7XG4gICAgaW5pdENsYXJpdHkod2luZG93LkNMQVJJVFlfSUQsIHVzZXJDb25zZW50KTtcblxuICAgIC8vdG9kbzogbW92ZSB0aGlzIGludG8gc2NyaXB0cyBzZWN0aW9uIG9uIGNvb2tpZSBwYWdlXG4gICAgLy8gSW5pdGlhbGlzZSBjb29raWUgcGFnZVxuICAgIHZhciAkY29va2llc1BhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1tb2R1bGU9XCJmaC1jb29raWVzLXBhZ2VcIl0nKTtcbiAgICBuZXcgQ29va2llc1BhZ2UoJGNvb2tpZXNQYWdlKS5pbml0KCk7XG5cbiAgICBpbml0aWFsaXplQmFja0J1dHRvbnMoKTtcbiAgICBpbml0aWFsaXplVmlzaWJpbGl0eVRvZ2dsZXMoKTtcbiAgICAvL3RvZG86IG9yZGVyaW5nIGJldHdlZW4gdGhlc2UgdHdvP1xuICAgIGluaXRpYWxpemVBZGRBbm90aGVyKCk7XG4gICAgaW5pdGlhbGl6ZUF1dG9jb21wbGV0ZXMoKTtcblxuICAgIC8vIGluaXRpYWxpc2Ugb3BlbiBjbG9zZSBidXR0b25zXG4gICAgbGV0IG9wZW5DbG9zZUJ1dHRvbnM6IE5vZGVMaXN0T2Y8SFRNTEJ1dHRvbkVsZW1lbnQ+ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uW2RhdGEtb3Blbi1jbG9zZS1tb2JpbGVdJyk7XG4gICAgb3BlbkNsb3NlQnV0dG9ucz8uZm9yRWFjaCgob3BlbkNsb3NlQnV0dG9uKSA9PiB7XG4gICAgICAgIG5ldyBPcGVuQ2xvc2VCdXR0b24ob3BlbkNsb3NlQnV0dG9uKTtcbiAgICB9KTtcbn07XG5cbi8vdG9kbzogZG8gd2Ugd2FudCB0byBkbyB0aGlzLi4uXG4vL2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGZ1bmN0aW9uICgpIHtcblxud2luZG93LkdPVlVLRnJvbnRlbmQuaW5pdEFsbCgpO1xud2luZG93Lk1PSkZyb250ZW5kLmluaXRBbGwoKTtcbndpbmRvdy5GYW1pbHlIdWJzRnJvbnRlbmQuaW5pdEFsbCgpO1xuIl19\n"]}